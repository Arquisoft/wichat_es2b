openapi: 3.0.0
info:
  title: Gatewayservice API
  description: Gateway OpenAPI specification.
  version: 0.2.0
servers:
  - url: http://localhost:8000
    description: Development server
  - url: http://SOMEIP:8000
    description: Production server
paths:
  /adduser:
    post:
      summary: Add a new user to the database.
      operationId: addUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: User ID.
                  example: student
                password:
                  type: string
                  description: User password.
                  example: pass
      responses:
        '200':
          description: User added successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    description: User ID
                  password:
                    type: string
                    description: Hashed password
                    example: $2b$10$ZKdNYLWFQxzt5Rei/YTc/OsZNi12YiWz30JeUFHNdAt7MyfmkTuvC
                  _id:
                    type: string
                    description: Identification
                    example: 65f756db3fa22d227a4b7c7d
                  createdAt:
                    type: string
                    description: Creation date.
                    example: '2024-03-17T20:47:23.935Z'
                  ___v:
                    type: integer
                    example: '0'                                        
        '400':
          description: Failed to add user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: getaddrinfo EAI_AGAIN mongodb
  /health:
    get:
      summary: Check the health status of the service.
      operationId: checkHealth
      responses:
        '200':
          description: Service is healthy.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Health status.
                    example: OK
  /api/stats:
    get:
      summary: Obtiene estadísticas de usuario
      operationId: getUserStats
      responses:
        "200":
          description: Estadísticas del usuario obtenidas con éxito
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Error en la obtención de estadísticas
  /questions:
    get:
      summary: Obtiene preguntas del juego
      operationId: getGameQuestions
      responses:
        "200":
          description: Preguntas obtenidas con éxito
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        "500":
          description: Error al obtener preguntas
  /login:
    post:
      summary: Log in to the system.
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: User ID.
                  example: student
                password:
                  type: string
                  description: User password.
                  example: pass
      responses:
        '200':
          description: Login successful. Returns user token, username, and creation date.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: User token.
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NWY3NTZkYjNmYTIyZDIyN2E0YjdjN2QiLCJpYXQiOjE3MTA3MDg3NDUsImV4cCI6MTcxMDcxMjM0NX0.VMG_5DOyQ4GYlJQRcu1I6ICG1IGzuo2Xuei093ONHxw
                  username:
                    type: string
                    description: Username.
                    example: student
                  createdAt:
                    type: string
                    description: Creation date.
                    example: '2024-03-17T20:47:23.935Z'
        '401':
          description: Invalid credentials.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Shows the error info..
                    example: Invalid credentials
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Internal Server Error
  /ask:
    post:
      summary: Realiza una consulta al modelo de lenguaje (LLM)
      operationId: askLLM
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                question:
                  type: string
                  example: "¿Cuál es la capital de Francia?"
      responses:
        "200":
          description: Respuesta obtenida del LLM
          content:
            application/json:
              schema:
                type: object
                properties:
                  answer:
                    type: string
                    example: "París"
        "500":
          description: Error en la solicitud al LLM
  /hint:
    post:
      summary: Solicita una pista al modelo de lenguaje (LLM)
      operationId: hintLLM
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                question:
                  type: string
                  example: "¿Cuál es la capital de Alemania?"
      responses:
        "200":
          description: Pista obtenida con éxito
          content:
            application/json:
              schema:
                type: object
                properties:
                  hint:
                    type: string
                    example: "Empieza con 'B'"
        "500":
          description: Error en la solicitud al LLM